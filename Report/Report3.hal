external procedure ARRn(record RcVc);

SetLangMode(LangUkrainian,"UKR",0);

global updating procedure AutoUnreservOrderMn()
begin
  record ORVc ORr,oldORr;
  row ORVc ORrw;
  boolean TrHs,testf;
  integer compnr,counter,i,mtrw;
  string 100 filename;
  
  
  compnr = currentcompany;
  TrHs = true;
  ORr.Reserved = 1;
  
  switch(compnr)begin
    case  2:  filename = "Stock/AutoreservIT";
    					delete_file(filename & ".xls");
    					CreateFile(filename & ".xls");
              closefile;
              millisleep(100);
              openexportfile(filename & ".xls",true);
              
    case  5:  filename = "Stock/AutoreservTXT";
    					delete_file(filename & ".xls");
    					CreateFile(filename & ".xls");
              closefile;
              millisleep(100);
              openexportfile(filename & ".xls",true);
    
    case  7:  filename = "Stock/AutoreservTNM";
    					delete_file(filename & ".xls");
    					CreateFile(filename & ".xls");
              closefile;
              millisleep(100);
              openexportfile(filename & ".xls",true);
  end;
  
  startformat(15);
    outString(0,0,"Рахунок",false);
    outString(0,0,"Дата раунка",false);
    outString(0,0,"Дата резерва",false);
    outString(0,0,"Код клієнта",false);
    outString(0,0,"Назва клієнта",false);
    outString(0,0,"Продавець",false);
  endformat;
  counter = 0;
  while(loopkey("Reserved",ORr,1,TrHs))begin
    testf = true;
    if(ORr.Reserved!=1)then begin TrHs=false; testf = false; end;
  
    if(stringtodate(ORr.PlanShip)>=CurrentDate)then begin testf = false; end;
    if(blank(ORr.PlanShip))then begin testf = false; end;
    if(ORr.Closed>0)then begin testf = false; end;
    
    if(testf)then begin
      testf = false;
      mtrw = matrowcnt(ORr);
      for(i=0;i<mtrw;i=i+1)begin
        matrowget(ORr,i,ORrw);
        if(ORrw.Quant-ORrw.Invd>0)then begin
          testf = true;
        end;
      end;
    end;
    
    if(testf)then begin
      recordCopy(oldORr,ORr);
      ORr.Reserved=0;
      if (RecordUpdate(oldORr,ORr,true)==0) then begin  
        counter = counter + 1;
        startformat(15);
          outString(0,0,ORr.SerNr,false);
          outString(0,0,ORr.OrdDate,false);
          outString(0,0,ORr.PlanShip,false);
          outString(0,0,ORr.CustCode,false);
          outString(0,0,ORr.Addr0,false);
          outString(0,0,ORr.SalesMan,false);
        endformat;
      end;
    end;
  end;
  
  switch(compnr)begin
  		case 5:   CloseFile;
      case 7:   CloseFile;
  end;
  
  if(counter>0)then begin
    switch(compnr)begin
    	case 5:   RunProgram("Stock/AutoreservTXT.sh", "");
      case 7:   RunProgram("Stock/AutoreservTNM.sh", "");
    end;
  end;
  
return;
end;

global procedure DebitorkaReportEn(integer compnr)
begin
record RcVc RepSpec;
string 50 filename;
      
      if(GetDateID(currentdate)==1 or GetDateID(currentdate)==3)then begin
        switch(compnr)begin
          //case 1: filename = "Stock/ISTORDebitorka.xls";
          case 2: filename = "Stock/ITEKUADebitorka.xls";
          //case 3: filename = "Stock/WDDebitorka.xls";
          //case 4: filename = "Stock/PPhLDebitorka.xls";//PPhL
          case 5: filename = "Stock/TXTDebitorka.xls";
          //case 6: filename = "Stock/ITEKMDDebitorka.xls";
          case 7: filename = "Stock/TNMDebitorka.xls";
          //case 8: filename = "Stock/A-SRVDebitorka.xls";
        end;
        
        delete_file(filename);
        CreateFile(filename);
        closefile;
        millisleep(100);
        openexportfile(filename,true);
        ReportDefaults(RepSpec,"ARRClass");
        RepSpec.ArtMode = 1;
        RepSpec.flags[1] = 0;
        RepSpec.flags[20] = 1;
        RepSpec.flags[14] = 1;
        RepSpec.flags[2] = 1;
        RepSpec.Media = mtExcel;
        ARRn(RepSpec);
        closefile;
        
        switch(compnr)begin
          //case 1: RunProgram("Stock/ISTORDebitorka.sh","");
          case 2: RunProgram("Stock/ITEKUADebitorka.sh","");
          //case 3: RunProgram("Stock/WDDebitorka.sh","");
          //case 4: RunProgram("Stock/PPhLDebitorka.sh","");//PPhL
          case 5: RunProgram("Stock/TXTDebitorka.sh","");
          //case 6: RunProgram("Stock/ITEKMDDebitorka.sh","");
          case 7: RunProgram("Stock/TNMDebitorka.sh","");
          //case 8: RunProgram("Stock/A-SRVDebitorka.sh","");
        end;
      end;
return;
end;



global procedure CustSalesReportRn(record RcVc RepSpec)
begin
  record IVVc IVr;
  row IVVc IVrw;
  record INVc INr;
  boolean testf,TrHs;
  string 20 mykey;
  integer mtrw,i;
  
  startreportnoheaderjob("Історія продажів по клієнту");
  
    startformat(15);
      OutString(0,0,"Клієнт",false);
      OutString(60,0,"Дата",false);
      OutString(60,0,"Накладна",false);
      OutString(60,0,"Рахунок",false);
      OutString(120,0,"Товар",false);
      OutString(200,0,"Найменування",false);
      OutString(330,0,"Ціна",false);
      OutString(370,0,"Кіл-ть",false);
      OutString(405,0,"Знижка",false);
      OutString(460,0,"Сума",true);
      OutString(1,0,"Група",true);
    endformat;
      
    TrHs = true;
    IVr.CustCode = RepSpec.f1;
    IVr.InvDate = RepSpec.sStartDate;
    if(nonblank(RepSpec.f1))then begin
      mykey = "CustCode";
    end else begin
      mykey = "InvDate";
    end;
    
    while(loopkey(mykey,IVr,1,TrHs))begin
      testf = true;
      if(nonblank(RepSpec.f1) and RepSpec.f1!=IVr.CustCode)then begin 
        testf = false; 
        if(mykey=="CustCode")then begin
          TrHs = false;
        end;
      end;
      
      if(RepSpec.sStartDate>IVr.InvDate and RepSpec.sEndDate<IVr.InvDate)then begin 
        testf = false; 
        if(mykey=="InvDate")then begin
          TrHs = false;
        end;
      end;
      
      if(testf)then begin
        mtrw = matrowcnt(IVr);

        for(i=0;i<mtrw;i=i+1)begin
          matrowget(IVr,i,IVrw);
          if(nonblank(IVrw.ArtCode))then begin
            if(IVrw.ArtCode==RepSpec.f2 or blank(RepSpec.f2))then begin
              startformat(15);
                OutString(0,0,IVr.CustCode,false);
                OutString(60,0,IVr.InvDate,false);
                OutString(60,"DblIVVc",IVr.SerNr,false);
                OutString(60,"DblORVc",IVr.OrderNr,false);
                OutString(120,0,IVrw.ArtCode,false);
                OutString(200,0,IVrw.Spec,false);
                OutString(310,0,IVrw.Price,false);
                OutString(370,0,IVrw.Quant,false);
                OutString(405,0,IVrw.vRebate,false);
                OutString(460,0,IVrw.Sum,false);
                INr.Code = IVrw.ArtCode;
                if(Readfirstmain(INr,1,true)) then
                begin
                	OutString(1,0,INr.Group,false);
								end;
              endformat;
            end;
          end;
        end;
      end;
    end;
  endjob;
return;
end;