remote function Boolean StockMovVc_PasteArtCode(var record StockMovVc,Integer,Integer,var array string);remote function Boolean StockMovVc_PasteQuant(var record StockMovVc,Integer);remote procedure StockMovVc_PasteSerialNr(var record StockMovVc,Integer,var array string);globalprocedure CollectSerials(var record StockMovVc StockMov3r,string item,string serialnr,integer qty)begin  Integer i,rwcnt,pos;  row StockMovVc StockMov3rw;  string 50 serial;  Boolean foundf;    foundf = false;  serial = serialnr;  rwcnt = MatRowCnt(StockMov3r);  for (i=0;i<rwcnt;i=i+1) begin  	MatRowGet(StockMov3r,i,StockMov3rw);    if (item==StockMov3rw.ArtCode and serial==StockMov3rw.SerialNr) then begin      pos = i;      foundf = true;      i = rwcnt;    end;  end;  if (foundf==false) then begin    pos = rwcnt;    StockMov3rw.SerialNr = serial;    StockMov3rw.ArtCode = item;    StockMov3rw.Quant = 0;  end;  StockMov3rw.Quant = StockMov3rw.Quant + qty;  MatRowPut(StockMov3r,pos,StockMov3rw);  return;end;global //Edit***************************Sasha2,15:00 26.08.2014 {updating procedure SendToShopsFromORVcRoutine(var record StockMovVc StockMov2r,record ORVc ORr,var integer res,integer company)BEGIN row ORVc ORrw; record StockMovVc StockMovr; row StockMovVc StockMovrw, StockMov2rw; record INVc INr; integer rwcnt,i,rwcnt1,j,sercnt,k,rownr; val itemqty; Boolean StockMovexists; array string 255 aWarning;  	 	rownr = 0;  		if (ORr.OrderClass=="Shops") then begin  			rwcnt=MatRowCnt(ORr);  			StockMovr.OrderNr = ORr.SerNr;  			StockMovexists = ReadFirstKey("OrderNr",StockMovr,1,true);  			for (i=0;i<rwcnt;i=i+1) begin  				MatRowGet(ORr,i,ORrw);  				if ((ORrw.Quant - ORrw.Shipd2) > 0 and NonBlank(ORrw.ArtCode)) then begin  					itemqty = 0;  					if (StockMovexists) then begin  						while (LoopKey("OrderNr",StockMovr,1,true)) begin	  						rwcnt1=MatRowCnt(StockMovr);	  						for (j=0;j<rwcnt1;j=j+1) begin	  							MatRowGet(StockMovr,j,StockMovrw);	  							if (StockMovr.OrdFlag==1 and StockMovr.OKFlag==1 and StockMovrw.ArtCode==ORrw.ArtCode and StockMovrw.ORRow==i) then begin	  								if (StockMovr.ToLocation==ORr.Location) then begin	  									itemqty = itemqty + StockMovrw.Quant;	  								end;	  								if (StockMovr.FrLocation==ORr.Location) then begin	  									itemqty = itemqty - StockMovrw.Quant;	  								end;	  							end;	  						end;  						end; RESETLOOP(StockMovr);  					end;  					if (itemqty < ORrw.Quant) then begin  						INr.Code = ORrw.ArtCode;  						ReadFirstMain(INr,1,true);  						if (INr.SerNrf == 1) then begin  							sercnt = ORrw.Quant - itemqty;  							for (k=0;k<sercnt;k=k+1) begin  								StockMov2rw.ArtCode = ORrw.ArtCode;  								MatRowPut(StockMov2r,rownr,StockMov2rw);  								if (!StockMovVc_PasteArtCode(StockMov2r,rownr,1,aWarning)) then begin  									res = 0;  									goto LOut;  								end;  								MatRowGet(StockMov2r,rownr,StockMov2rw);		  						StockMov2rw.Spec = ORrw.Spec;		  						StockMov2rw.OrdQuant = 1;		  						StockMov2rw.Quant = 1;		  						MatRowPut(StockMov2r,rownr,StockMov2rw);		  						if (!StockMovVc_PasteQuant(StockMov2r,rownr)) then begin		  							res = 0;  									goto LOut;		  						end;		  						MatRowGet(StockMov2r,rownr,StockMov2rw);		  						//StockMov2rw.OldPrice = ORrw.BasePrice;		  						//StockMov2rw.NewPrice = ORrw.BasePrice;		  						StockMov2rw.ORRow = i;		  						MatRowPut(StockMov2r,rownr,StockMov2rw);		  						rownr = rownr + 1;  							end;  						end else begin	  						StockMov2rw.ArtCode = ORrw.ArtCode;	  						MatRowPut(StockMov2r,rownr,StockMov2rw);							if (!StockMovVc_PasteArtCode(StockMov2r,rownr,1,aWarning)) then begin								res = 0;								goto LOut;							end;  							MatRowGet(StockMov2r,rownr,StockMov2rw);	  						StockMov2rw.Spec = ORrw.Spec;	  						StockMov2rw.OrdQuant = ORrw.Quant - itemqty;	  						StockMov2rw.Quant = ORrw.Quant - itemqty;	  						MatRowPut(StockMov2r,rownr,StockMov2rw);	  						if (!StockMovVc_PasteQuant(StockMov2r,rownr)) then begin	  							res = 0;								goto LOut;	  						end;	  						MatRowGet(StockMov2r,rownr,StockMov2rw);	  						//StockMov2rw.OldPrice = ORrw.BasePrice;		  					//StockMov2rw.NewPrice = ORrw.BasePrice;	  						StockMov2rw.ORRow = i;	  						MatRowPut(StockMov2r,rownr,StockMov2rw);	  						rownr = rownr + 1;  						end;  					end;	  				end;  			end;  			if (rownr > 0) then begin  				StockMov2r.OrderNr = ORr.SerNr;  				StockMov2r.OrdTransDate = CurrentDate;  				StockMov2r.SerNr = NextSerNr("StockMovVc","",-1,false,"");  				StockMov2r.ToLocation = ORr.Location;  				if (RECORDSTORE(StockMov2r,true)) then begin  					CreateRecordLink(ORr,company,StockMov2r,company);  					CreateRecordLink(StockMov2r,company,ORr,company);  				end;  			end;	  		end;  		  		res = rownr;	  	  LOut:;	RETURN;end; //Edit***************************Sasha2,15:00 26.08.2014 }global //Edit***************************Sasha2,15:00 26.08.2014 {updating procedure TakeFromShopsFromORVcRoutine(var record StockMovVc StockMov2r,record ORVc ORr,var integer res,integer company)BEGIN row ORVc ORrw; record StockMovVc StockMovr,StockMov3r; row StockMovVc StockMovrw, StockMov2rw,StockMov3rw; record INVc INr; record SHVc SHr; row SHVc SHrw; record RetVc Retr; row RetVc Retrw; integer rwcnt,i,rwcnt1,j,rownr,k,sercnt; val itemqty; Boolean TrHs,testf; array string 255 aWarning; string 200 stmoves,ret; record ItemHistVc IHr;	if (ORr.OrderClass=="SHOPS") then begin				StockMovr.OrderNr = ORr.SerNr;		TrHs = true;		while(loopkey("OrderNr",StockMovr,1,TrHs))begin			testf = true;			if(StockMovr.OrderNr!=ORr.SerNr)then begin testf = false; TrHs = false; end;			if(StockMovr.OrdFlag==0 or StockMovr.OKFlag==0)then begin testf = false; end;			if(StockMovr.ToLocation!=ORr.Location)then begin testf = false; end;						if(testf)then begin				stmoves = stmoves & StockMovr.SerNr & ",";			end;		end;				Retr.OrdNr = ORr.SerNr;		TrHs = true;		while(loopkey("OrdNr",Retr,1,TrHs))begin			testf = true;			if(Retr.OrdNr!=ORr.SerNr)then begin testf = false; TrHs = false; end;			if(Retr.OKFlag==0)then begin testf = false; end;			if(Retr.Location!=ORr.Location)then begin testf = false; end;						if(testf)then begin				ret = ret & Retr.SerNr & ",";			end;		end;				logtext(0,stmoves);		logtext(0,ret);				rwcnt = MatRowCnt(ORr);		for (i=0;i<rwcnt;i=i+1) begin			MatRowGet(ORr,i,ORrw);						TrHs = true;			IHr.ArtCode = ORrw.ArtCode;			while(loopkey("ActiveQty",IHr,1,TrHs))begin				testf = true;				if(IHr.ArtCode!=ORrw.ArtCode)then begin TrHs = false; testf = false; end;				if(IHr.Location!=ORr.Location)then begin testf = false; end;				if(setinset(IHr.TransNr,stmoves)==false and setinset(IHr.TransNr,ret)==false)then begin testf = false; end;				if(IHr.FileName!="StockMovVc" and IHr.FileName!="RetVc")then begin testf = false; end;								if(testf)then begin					logtext(0,IHr.SerNr);					StockMov2rw.ArtCode = IHr.ArtCode;					MatRowPut(StockMov2r,rownr,StockMov2rw);					StockMovVc_PasteArtCode(StockMov2r,rownr,1,aWarning);					MatRowGet(StockMov2r,rownr,StockMov2rw);					StockMov2rw.Spec = ORrw.Spec;					StockMov2rw.OrdQuant = IHr.RemQty;					StockMov2rw.Quant = IHr.RemQty;					MatRowPut(StockMov2r,rownr,StockMov2rw);					StockMovVc_PasteQuant(StockMovr,rownr);					MatRowGet(StockMov2r,rownr,StockMov2rw);					StockMov2rw.SerialNr = IHr.SerialNr;					MatRowPut(StockMov2r,rownr,StockMov2rw);					StockMovVc_PasteSerialNr(StockMov2r,rownr,aWarning);					MatRowGet(StockMov2r,rownr,StockMov2rw);					//StockMov2rw.OldPrice = ORrw.BasePrice;//???					//StockMov2rw.NewPrice = ORrw.BasePrice;//???					StockMov2rw.ORRow = i;					MatRowPut(StockMov2r,rownr,StockMov2rw);					rownr = rownr + 1;				end;			end;			resetloop(IHr);		end;				if(rownr>0)then begin			logtext(0,"rownr " & rownr);			StockMov2r.OrderNr = ORr.SerNr;			StockMov2r.OrdTransDate = CurrentDate;			StockMov2r.SerNr = NextSerNr("StockMovVc","",-1,false,"");			StockMov2r.FrLocation = ORr.Location;			if (RECORDSTORE(StockMov2r,true)) then begin				CreateRecordLink(ORr,company,StockMov2r,company);				CreateRecordLink(StockMov2r,company,ORr,company);			end;		end;		res = rownr;				end; 	/*	rownr = 0;  		if (ORr.OrderClass=="Shops") then begin  			rwcnt = MatRowCnt(ORr);  			RECORDNEW(StockMov3r);  			StockMovr.OrderNr = ORr.SerNr;  			if (ReadFirstKey("OrderNr",StockMovr,1,true)) then begin	  			for (i=0;i<rwcnt;i=i+1) begin	  				MatRowGet(ORr,i,ORrw);	  				if ((ORrw.Quant - ORrw.Shipd2) > 0 and NonBlank(ORrw.ArtCode)) then begin	  					itemqty = 0;  						while (LoopKey("OrderNr",StockMovr,1,true)) begin  							if (StockMovr.OrdFlag==1 and StockMovr.OKFlag==1 and StockMovr.OrderNr==ORr.SerNr) then begin		  						rwcnt1=MatRowCnt(StockMovr);		  						for (j=0;j<rwcnt1;j=j+1) begin		  							MatRowGet(StockMovr,j,StockMovrw);	  								testf = true;	  								if (StockMovrw.ArtCode!=ORrw.ArtCode or StockMovrw.ORRow!=i) then begin testf = false; end;	  								if (testf) then begin										if (StockMovr.ToLocation==ORr.Location) then begin				  							itemqty = itemqty + StockMovrw.Quant;				  							if (NonBlank(StockMovrw.SerialNr)) then begin				  								CollectSerials(StockMov3r,StockMovrw.ArtCode,StockMovrw.SerialNr,1);				  							end;				  						end;				  						if (StockMovr.FrLocation==ORr.Location) then begin				  							itemqty = itemqty - StockMovrw.Quant;				  							if (NonBlank(StockMovrw.SerialNr)) then begin				  								CollectSerials(StockMov3r,StockMovrw.ArtCode,StockMovrw.SerialNr,-1);				  							end;				  						end; 									end;	  							end;	  						end;  						end; RESETLOOP(StockMovr);  						  						SHr.OrderNr = ORr.SerNr;						TrHs = true;						while (LoopKey("OrderKey",SHr,1,TrHs)) begin							if (SHr.OKFlag==1 and SHr.OrderNr==ORr.SerNr) then begin								rwcnt1=MatRowCnt(SHr);								for (j=0;j<rwcnt1;j=j+1) begin									MatRowGet(SHr,j,SHrw);									testf = true;									if (SHrw.ArtCode!=ORrw.ArtCode or SHrw.OrdRow!=i) then begin testf = false; end;									if (testf) then begin				  						itemqty = itemqty - SHrw.Ship;				  						if (NonBlank(SHrw.SerialNr)) then begin			  								CollectSerials(StockMov3r,StockMovrw.ArtCode,SHrw.SerialNr,-1);			  							end; 									end;								end;							end;						end; RESETLOOP(SHr);												Retr.OrdNr = ORr.SerNr;						TrHs = true;						while (LoopKey("OrdNr",Retr,1,TrHs)) begin							if (Retr.OKFlag==1 and Retr.OrdNr==ORr.SerNr and Retr.Location==ORr.Location) then begin								rwcnt1=MatRowCnt(Retr);								for (j=0;j<rwcnt1;j=j+1) begin									MatRowGet(Retr,j,Retrw);									testf = true;									if (Retrw.ArtCode!=ORrw.ArtCode or Retrw.OrdRow!=i) then begin testf = false; end;									if (testf) then begin				  						itemqty = itemqty + Retrw.Quant;				  						if (NonBlank(Retrw.SerialNr)) then begin			  								CollectSerials(StockMov3r,StockMovrw.ArtCode,Retrw.SerialNr,1);			  							end;									end;								end;							end;						end; RESETLOOP(Retr);		  						  					if (itemqty > 0) then begin	  						INr.Code = ORrw.ArtCode;	  						ReadFirstMain(INr,1,true);	  						if (INr.SerNrf == 1) then begin	  							sercnt = MatRowCnt(StockMov3r);	  							for (k=0;k<sercnt;k=k+1) begin	  								MatRowGet(StockMov3r,k,StockMov3rw);	  								if (StockMov3rw.ArtCode==ORrw.ArtCode and StockMov3rw.Quant>0) then begin					  						StockMov2rw.ArtCode = ORrw.ArtCode;				  						MatRowPut(StockMov2r,rownr,StockMov2rw);		  								if (!StockMovVc_PasteArtCode(StockMov2r,rownr,1,aWarning)) then begin		  									res = 0;		  									goto LOut;		  								end;		  								MatRowGet(StockMov2r,rownr,StockMov2rw);				  						StockMov2rw.Spec = ORrw.Spec;				  						StockMov2rw.OrdQuant = 1;				  						StockMov2rw.Quant = 1;				  						MatRowPut(StockMov2r,rownr,StockMov2rw);				  						if (!StockMovVc_PasteQuant(StockMovr,rownr)) then begin				  							res = 0;		  									goto LOut;				  						end;				  						MatRowGet(StockMov2r,rownr,StockMov2rw);				  						StockMov2rw.SerialNr = StockMov3rw.SerialNr;				  						MatRowPut(StockMov2r,rownr,StockMov2rw);				  						StockMovVc_PasteSerialNr(StockMov2r,rownr,aWarning);				  						MatRowGet(StockMov2r,rownr,StockMov2rw);				  						//StockMov2rw.OldPrice = ORrw.BasePrice;//???						  				//StockMov2rw.NewPrice = ORrw.BasePrice;//???				  						StockMov2rw.ORRow = i;				  						MatRowPut(StockMov2r,rownr,StockMov2rw);				  						rownr = rownr + 1;				  					end;			  					end;			  					end else begin		  						StockMov2rw.ArtCode = ORrw.ArtCode;		  						MatRowPut(StockMov2r,rownr,StockMov2rw);  								if (!StockMovVc_PasteArtCode(StockMov2r,rownr,1,aWarning)) then begin  									res = 0;  									goto LOut;  								end;  								MatRowGet(StockMov2r,rownr,StockMov2rw);		  						StockMov2rw.Spec = ORrw.Spec;		  						StockMov2rw.OrdQuant = itemqty;		  						StockMov2rw.Quant = itemqty;		  						MatRowPut(StockMov2r,rownr,StockMov2rw);		  						if (!StockMovVc_PasteQuant(StockMovr,rownr)) then begin		  							res = 0;  									goto LOut;		  						end;		  						MatRowGet(StockMov2r,rownr,StockMov2rw);		  						StockMov2rw.SerialNr = "";		  						//StockMov2rw.OldPrice = ORrw.BasePrice;//???				  				//StockMov2rw.NewPrice = ORrw.BasePrice;//???		  						StockMov2rw.ORRow = i;		  						MatRowPut(StockMov2r,rownr,StockMov2rw);		  						rownr = rownr + 1;		  					end;		  					end;		  				end;		  			end;  			end;  			  			if (rownr > 0) then begin  				StockMov2r.OrderNr = ORr.SerNr;  				StockMov2r.OrdTransDate = CurrentDate;  				StockMov2r.SerNr = NextSerNr("StockMovVc","",-1,false,"");  				StockMov2r.FrLocation = ORr.Location;  				if (RECORDSTORE(StockMov2r,true)) then begin  					CreateRecordLink(ORr,company,StockMov2r,company);  					CreateRecordLink(StockMov2r,company,ORr,company);  				end;  			end;	  		end;  			  		res = rownr;  	  Lout:;	*/RETURN;end;