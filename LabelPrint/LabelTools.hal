//Edit***************************Sasha2,17:22 24.10.2014 {procedure PopulateAndSaveSingleQtyPURow(var array record PUVc PU2r,string item,val price,var array Integer rownr,integer index,string prlist)begin  record PUVc PU3r;  row PUVc PU3rw,PU2rw;  integer temprownr;  boolean notfound;  integer mtrw,i;    	notfound = true;  	temprownr = rownr[index];	if (temprownr<1) then begin		RECORDNEW(PU3r);		if (NonBlank(prlist)) then begin			PU3r.LangCode = prlist; //price list		end;	end else begin		PU3r = PU2r[index];	end;	mtrw = matrowcnt(PU3r);	For(i=0;i<mtrw;i=i+1) begin	  matrowget(PU3r,i,PU2rw);	  if(PU2rw.ArtCode==item)then begin	  	notfound = false;	  	i = mtrw;	  end;	end; 	PU3rw.ArtCode = item;	PU3rw.UPrice = price;	if(notfound)then begin		MatRowPut(PU3r,temprownr,PU3rw);	end;	temprownr = temprownr + 1;	rownr[index] = temprownr;	PU2r[index] = PU3r;  return;end; //Edit***************************Sasha2,17:22 24.10.2014 }//Edit***************************Sasha2,17:22 24.10.2014 {procedure PopulateAndSaveMultipleQtyPURow(var array record PUVc PU2r,string item,val price,val qty,var array Integer rownr,integer index,string prlist)begin  record PUVc PU3r;  row PUVc PU3rw,PU2rw;  integer temprownr;  boolean found;  integer mtrw,i,pos;  val tempqty;    	tempqty = qty;  	found = false;  	temprownr = rownr[index];	if (temprownr<1) then begin		RECORDNEW(PU3r);		if (NonBlank(prlist)) then begin			PU3r.LangCode = prlist; //price list		end;	end else begin		PU3r = PU2r[index];	end;	mtrw = matrowcnt(PU3r);	For(i=0;i<mtrw;i=i+1) begin	  matrowget(PU3r,i,PU2rw);	  if(PU2rw.ArtCode==item)then begin	  	pos = i;	  	found = true;	  	i = mtrw;	  end;	end; 	if(!found)then begin		pos = mtrw - 1;	end;	pos = pos + 1;	PU3rw.ArtCode = item;	PU3rw.UPrice = price;	while (tempqty>0) begin		MatRowInsert(PU3r,pos,PU3rw);		pos = pos + 1;		temprownr = temprownr + 1;		tempqty = tempqty - 1;	end;	rownr[index] = temprownr;	PU2r[index] = PU3r;  return;end; //Edit***************************Sasha2,17:22 24.10.2014 }global //Edit***************************Sasha2,17:38 13.10.2014 {procedure PrepareSingleQtyPUVcLabelItems(record PUVc PUr,var array record PUVc PU2r,var array Integer rownr,string prlist)BEGIN  row PUVc PUrw;  record INVc INr;  Integer i,rwcnt;     rwcnt = MatRowCnt(PUr);    for (i=0;i<rwcnt;i=i+1) begin    	MatRowGet(PUr,i,PUrw);    	INr.Code = PUrw.ArtCode;    	if (nonblank(PUrw.ArtCode) and ReadFirstMain(INr,1,true)) then begin    		switch (INr.LSize) begin    			case 0: PopulateAndSaveSingleQtyPURow(PU2r,PUrw.ArtCode,PUrw.UPrice,rownr,0,prlist);    			case 1: PopulateAndSaveSingleQtyPURow(PU2r,PUrw.ArtCode,PUrw.UPrice,rownr,1,prlist);    			case 2: PopulateAndSaveSingleQtyPURow(PU2r,PUrw.ArtCode,PUrw.UPrice,rownr,2,prlist);    			case 3: PopulateAndSaveSingleQtyPURow(PU2r,PUrw.ArtCode,PUrw.UPrice,rownr,3,prlist);    			case 4: PopulateAndSaveSingleQtyPURow(PU2r,PUrw.ArtCode,PUrw.UPrice,rownr,4,prlist);    			case 5: PopulateAndSaveSingleQtyPURow(PU2r,PUrw.ArtCode,PUrw.UPrice,rownr,5,prlist);    			case 6: PopulateAndSaveSingleQtyPURow(PU2r,PUrw.ArtCode,PUrw.UPrice,rownr,6,prlist);    		end;	    	end;    end;      RETURN;END; //Edit***************************Sasha2,17:38 13.10.2014 }global //Edit***************************Sasha2,17:38 13.10.2014 {procedure PrepareSingleQtyStockLabelItems(var array record PUVc PU2r,var array Integer rownr,string location,string prlist)BEGIN  record ItemStatusVc ISr;  record INVc INr;  record PLVc PLr;  Integer i,rwcnt;  Boolean TrHs,testf;  val price; 	    ISr.Location = location;    TrHs = true;    While (LoopKey("Location",ISr,1,TrHs)) begin    	testf = true;    	if (blank(location)) then begin TrHs = false; testf = false; end;    	if (nonblank(location) and ISr.Location!=location) then begin TrHs = false; testf = false; end;    	if (ISr.Instock==0) then begin testf = false; end;    	if (testf) then begin    		INr.Code = ISr.Code;    		if (nonblank(ISr.Code) and ReadFirstMain(INr,1,true)) then begin    			if (blank(prlist)) then begin    				price = INr.UPrice1;    			end else begin    				PLr.ArtCode = ISr.Code;    				PLr.PLCode = prlist;    				Readfirstmain(PLr,2,true);    				price = PLr.ExVatPrice;    			end;    			if (price!=0) then begin		    		switch (INr.LSize) begin		    			case 0: PopulateAndSaveSingleQtyPURow(PU2r,ISr.Code,price,rownr,0,prlist);		    			case 1: PopulateAndSaveSingleQtyPURow(PU2r,ISr.Code,price,rownr,1,prlist);		    			case 2: PopulateAndSaveSingleQtyPURow(PU2r,ISr.Code,price,rownr,2,prlist);		    			case 3: PopulateAndSaveSingleQtyPURow(PU2r,ISr.Code,price,rownr,3,prlist);		    			case 4: PopulateAndSaveSingleQtyPURow(PU2r,ISr.Code,price,rownr,4,prlist);		    			case 5: PopulateAndSaveSingleQtyPURow(PU2r,ISr.Code,price,rownr,5,prlist);		    			case 6: PopulateAndSaveSingleQtyPURow(PU2r,ISr.Code,price,rownr,6,prlist);		    		end;	    		end;		    	end;    	end;    	    end;      RETURN;END; //Edit***************************Sasha2,17:38 13.10.2014 }global //Edit***************************Sasha2,17:38 13.10.2014 {procedure PrepareMultipleQtyPUVcLabelItems(record PUVc PUr,var array record PUVc PU2r,var array Integer rownr,string prlist)BEGIN  row PUVc PUrw;  record INVc INr;  Integer i,rwcnt;     rwcnt = MatRowCnt(PUr);    for (i=0;i<rwcnt;i=i+1) begin    	MatRowGet(PUr,i,PUrw);    	INr.Code = PUrw.ArtCode;    	if (nonblank(PUrw.ArtCode) and ReadFirstMain(INr,1,true)) then begin    		PopulateAndSaveMultipleQtyPURow(PU2r,PUrw.ArtCode,PUrw.UPrice,PUrw.Quant,rownr,0,prlist);    	end;    end;      RETURN;END; //Edit***************************Sasha2,17:38 13.10.2014 }global //Edit***************************Sasha2,17:38 13.10.2014 {procedure PrepareMultipleQtyStockLabelItems(var array record PUVc PU2r,var array Integer rownr,string location,string prlist)BEGIN  record ItemStatusVc ISr;  record INVc INr;  record PLVc PLr;  Integer i,rwcnt;  Boolean TrHs,testf;  val price; 	    ISr.Location = location;    TrHs = true;    While (LoopKey("Location",ISr,1,TrHs)) begin    	testf = true;    	if (blank(location)) then begin TrHs = false; testf = false; end;    	if (nonblank(location) and ISr.Location!=location) then begin TrHs = false; testf = false; end;    	if (ISr.Instock==0) then begin testf = false; end;    	if (testf) then begin    		INr.Code = ISr.Code;    		if (nonblank(ISr.Code) and ReadFirstMain(INr,1,true)) then begin    			if (blank(prlist)) then begin    				price = INr.UPrice1;    			end else begin    				PLr.ArtCode = ISr.Code;    				PLr.PLCode = prlist;    				Readfirstmain(PLr,2,true);    				price = PLr.ExVatPrice;    			end;    			if (price!=0) then begin	    			PopulateAndSaveMultipleQtyPURow(PU2r,ISr.Code,price,ISr.Instock,rownr,0,prlist);	    		end;		    	end;    	end;    	    end;      RETURN;END; //Edit***************************Sasha2,17:38 13.10.2014 }globalprocedure LabelStockItemsRn(record RcVc RepSpec)begin  array record PUVc PUr;  Integer i;  array integer rownr;  boolean previewf;  /*StartReportJob(USetStr(0));  EndJob;*/  	switch (RepSpec.ArtMode) begin  		case 0: previewf = false;  		case 1: previewf = true;  	end;  	if (RepSpec.OnlyUnprntd==0) then begin  		PrepareSingleQtyStockLabelItems(PUr,rownr,RepSpec.f1,RepSpec.f2);		for (i=0;i<7;i=i+1) begin			if (rownr[i]>0) then begin				PrintDocument(PUr[i],"ItemLabForm" & (i+1),previewf);			end;		end;  	end else begin  		PrepareMultipleQtyStockLabelItems(PUr,rownr,RepSpec.f1,RepSpec.f2);		if (rownr[0]>0) then begin LogText(0,"rownr[0] = " & rownr[0]);			PrintDocument(PUr[0],"ItemLabForm8",previewf);		end;  	end;    return;end;globalprocedure LabelPUVcItemsRn(record RcVc RepSpec)begin  record PUVc PUr;  array record PUVc PU2r;  Integer i;  array integer rownr;  boolean previewf;      	switch (RepSpec.ArtMode) begin  		case 0: previewf = false;  		case 1: previewf = true;  	end;  	  	PUr.SerNr = RepSpec.long1;  	if (ReadFirstMain(PUr,1,true)) then begin  		if (RepSpec.OnlyUnprntd==0) then begin  			PrepareSingleQtyPUVcLabelItems(PUr,PU2r,rownr,RepSpec.f2);		    for (i=0;i<7;i=i+1) begin		    	if (rownr[i]>0) then begin		    		PrintDocument(PU2r[i],"ItemLabForm" & (i+1),previewf);		    	end;		    end;  		end else begin  			PrepareMultipleQtyPUVcLabelItems(PUr,PU2r,rownr,RepSpec.f2);	    	if (rownr[0]>0) then begin	    		PrintDocument(PU2r[0],"ItemLabForm8",previewf);	    	end;  		end;  	end;	    return;end;