remote updating function Boolean RecordAction_raArchiveFromArchive(var record ArchiveVc,record RLinkVc,Integer,string);
remote updating function Boolean RecordAction_raWebNavLinkFromArchive(var record ArchiveVc,record RLinkVc,Integer,record RcVc);
remote updating function Integer RecordAction_raMailFromArchive(var record MailVc,record RLinkVc,Integer);
remote updating function Boolean RecordAction_raNoteFromArchive(var record NotepadVc,record RLinkVc,Integer);
remote updating function Boolean RecordAction_raActionFromArchive(var record ActionVc,record RLinkVc,Integer);
remote updating procedure CreareActReply(var record ActVc,record ActVc);
remote function Boolean POVc_PasteVECode(var record POVc,Boolean);
remote function Boolean POVc_PasteArtCode(var record POVc,Integer,Boolean);

global
procedure NoteFromArchiveWsm()
BEGIN
  Integer wn,mwn,nwn,thewn;
  record RcVc RepSpec;
  record NotepadVc Noter;
  
  wn = CurWindow;
  GetWindowRecord(wn,RepSpec);
  if (blank(RepSpec.f1)) then begin goto LNoteFromArchiveWsm; end;
  RecordNew(Noter);
  Noter.FromRecidStr = RepSpec.f1;
  mwn = MotherWindow(wn);
  thewn = mwn;
  if (thewn==0) then begin thewn = wn; end;
  Noter.CompanyNr = WindowCompanyNr(thewn);
  nwn = OpenWindow("NotepadDClass",1,wn,"","",Noter);
  //millisleep(100);
  deselectwindow(nwn,false);
  PutWindowString(nwn,"NotepadRLinkComment",CurrentDate & " " & currentuser); //Edit***************************Sasha2,12:03 03.06.2015
	LNoteFromArchiveWsm:;
  RETURN;
END;


global updating procedure OrdFromActDsm()
begin
	record ActVc Actr,oldActr,old1Actr;
	integer wn,cnt;
	string 50 from,to;
	record ORVc ORr;
	record RLinkVc RLr;
	
	wn = curwindow;
	deselectwindow(wn,true);
	getwindowrecord(wn,oldActr);
	
	cnt = 1;
	if(ReadRecordLink(oldActr,cnt,ORr,RLr))then begin
		if(ORr.SerNr>0)then begin
			OpenWindow("ORDClass",1,0,"","",ORr); 
		end;
	end;
	
return;
end;

global updating procedure SMFromActDsm()
begin
	record ActVc Actr,oldActr,old1Actr;
	integer wn,cnt;
	string 50 from,to;
	record StockMovVc SMr;
	record RLinkVc RLr;
	
	wn = curwindow;
	deselectwindow(wn,true);
	getwindowrecord(wn,oldActr);
	
	cnt = 1;
	if(ReadRecordLink(oldActr,cnt,SMr,RLr))then begin
		if(SMr.SerNr>0)then begin
			OpenWindow("StockMovDClass",1,0,"","",SMr); 
		end;
	end;
	
return;
end;


global updating procedure CreatePOFromActDsm()
begin
	record ActVc Actr,oldActr,old1Actr,newAcrt;
	integer wn,cnt;
	string 50 from,to;
	record StockMovVc SMr;
	record POVc POr;
	row POVc POrw;
	record RLinkVc RLr;
	record ORVc ORr;
	
	wn = curwindow;
	deselectwindow(wn,true);
	getwindowrecord(wn,Actr);
  if(Actr.ActType=="ZAKAZ")then begin
    cnt = 1;
    if(ReadRecordLink(Actr,cnt,SMr,RLr))then begin
      if(SMr.SerNr>0)then begin
        ReadRecordLink(SMr,1,ORr,RLr)
        if(ReadRecordLink(Actr,1,POr,RLr)==false)then begin
          recordnew(POr);
          POr.VECode = "ODER";
          POVc_PasteVECode(POr,true);
          POr.Location = "OFFICE";
          POr.SerNr = NextSerNr("POVc",POr.TransDate,-1,false,"");
          POr.Comment = Actr.Comment;
          if(nonblank(Actr.ArtCode))then begin
            POrw.ArtCode = Actr.ArtCode;
            MatRowPut(POr,0,POrw);      
            if (POVc_PasteArtCode(POr,0,false)) then begin end;
            MatRowGet(POr,0,POrw); 
            POrw.Quant = Actr.Value;
            MatRowPut(POr,0,POrw);
          end;
          recordstore(POr,true);
          createrecordlink(POr,currentcompany,SMr,currentcompany);
          createrecordlink(SMr,currentcompany,POr,currentcompany);
          createrecordlink(POr,currentcompany,Actr,currentcompany);
          createrecordlink(Actr,currentcompany,POr,currentcompany);
        end;
        OpenWindow("PODClass",1,0,"","",POr); 
        
      end;
    end;
  end else begin
    beep;
  end;
	
	
	
	

	
return;
end;


global updating procedure ActBackDsm()
begin
	record ActVc Actr,oldActr,old1Actr;
	integer wn;
	string 50 from,to;
	record SVOVc SVOr;
	
	wn = curwindow;
	deselectwindow(wn,true);
	getwindowrecord(wn,oldActr);
	CreareActReply(Actr,oldActr);
	closewindow(wn);
	OpenWindow("ActDClass",1,0,"","",Actr);
	
	/*
	wn = curwindow;
	deselectwindow(wn,true);
	getwindowrecord(wn,oldActr);
	closewindow(wn);
	recordnew(Actr);
	//recordnew(old1Actr);
	old1Actr.UUID = Actr.UUID;
	recordcopy(Actr,oldActr);
	Actr.SerNr = -1;
	Actr.UUID = old1Actr.UUID;
	from = Actr.MainPersons;
	to = Actr.Supervisor;
	Actr.MainPersons = to;
	Actr.Supervisor = from;
	Actr.Comment = "RE:" & Actr.Comment;
	Actr.TransDate = currentdate;
	Actr.StartTime = addminutes(currenttime,2);
	if(!setinset(Actr.Supervisor,Actr.CCPersons))then begin
		if(blank(Actr.CCPersons))then begin
			Actr.CCPersons = Actr.Supervisor;
		end else begin
			Actr.CCPersons = Actr.CCPersons & "," & Actr.Supervisor;
		end;
	end;
	//Actr.SerNr = NextSerNr("ActVc",currentdate,-1,false,"");
	recordinsert(Actr,true);
	SVOr.SerNr = Actr.SVOSerNr;
	if(readfirstmain(SVOr,1,true))then begin
		createrecordlink(SVOr,currentcompany,Actr,currentcompany);
		createrecordlink(Actr,currentcompany,SVOr,currentcompany);
	end;
	wn = OpenWindow("ActDClass",1,0,"","",Actr);
	*/
	
return;
end;

/*global
function Integer ReportsToMailDClassSelectSetToPaste(Integer wn,string fieldname)
begin
  Integer res,rownr;
  record ReportsToMailVc Accessr;
  row ReportsToMailVc Accessrw;
  
  res = -1;
  GetWindowRecord(wn,Accessr);
  rownr = WindowActiveRow(wn);
  switch (fieldname) begin
    case "AccLevel":
      res = 1;
      if (rownr>=0) then begin
        MatRowGet(Accessr,rownr,Accessrw);
//        switch (StringSetFromString(465,Accessr.WindowClass)) begin
        switch (Accessrw.AccType) begin
          case 1: res = 586;
          case 6: res = 352;
          case 9: res = 352;
        end;
      end;
  end;
  ReportsToMailDClassSelectSetToPaste = res;
  return;
end;*/
