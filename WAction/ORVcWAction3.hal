procedure CollectSerials(var record StockMovVc StockMov3r,var row StockMovVc StockMov3rw,string item,string serialnr,integer qty)begin  Integer i,rwcnt,pos;  string 50 serial;  Boolean foundf;    foundf = false;  serial = serialnr;  rwcnt = MatRowCnt(StockMov3r);  for (i=0;i<rwcnt;i=i+1) begin  	MatRowGet(StockMov3r,i,StockMov3rw);    if (item==StockMov3rw.ArtCode and serial==StockMov3rw.SerialNr) then begin      pos = i;      foundf = true;      i = rwcnt;    end;  end;  if (foundf==false) then begin    pos = rwcnt;    StockMov3rw.SerialNr = serial;    StockMov3rw.ArtCode = item;    StockMov3rw.Quant = 0;  end;  StockMov3rw.Quant = StockMov3rw.Quant + qty;  MatRowPut(StockMov3r,pos,StockMov3rw);  return;end;global //Edit***************************Sasha2,15:00 26.08.2014 {updating procedure SendToShopsFromORVcDm()BEGIN record ORVc ORr; row ORVc ORrw; longint wn; record StockMovVc StockMovr,StockMov2r; row StockMovVc StockMovrw, StockMov2rw; record INVc INr; integer rwcnt,i,rwcnt1,j,sercnt,k,rownr,company; val itemqty; Boolean StockMovexists;  	rownr = 0; 	company = CurrentCompany; 	wn = CurWindow;  	GetWindowRecord(wn,ORr);  	if (WindowState(wn) == Rs_normal) then begin  		//if (ORr.OrderClass=="Shops") then begin  			rwcnt=MatRowCnt(ORr);  			RECORDNEW(StockMov2r);  			StockMovr.OrderNr = ORr.SerNr;  			StockMovexists = ReadFirstKey("OrderNr",StockMovr,1,true);  			for (i=0;i<rwcnt;i=i+1) begin  				MatRowGet(ORr,i,ORrw);  				if ((ORrw.Quant - ORrw.Shipd2) > 0 and NonBlank(ORrw.ArtCode)) then begin  					itemqty = 0;  					if (StockMovexists) then begin  						while (LoopKey("OrderNr",StockMovr,1,true)) begin	  						rwcnt1=MatRowCnt(StockMovr);	  						for (j=0;j<rwcnt1;j=j+1) begin	  							MatRowGet(StockMovr,j,StockMovrw);	  							//LogText(0,"StockMovrw.ArtCode: " & StockMovrw.ArtCode & " ORrw.ArtCode: " & ORrw.ArtCode & " i =" & i & " StockMovrw.IntORRow = " & StockMovrw.IntORRow);	  							if (StockMovr.OrdFlag==1 and StockMovr.OKFlag==1 and StockMovrw.ArtCode==ORrw.ArtCode and StockMovrw.IntORRow==i) then begin	  								if (StockMovr.ToLocation==ORr.Location) then begin	  									itemqty = itemqty + StockMovrw.Quant;	  								end;	  								if (StockMovr.FrLocation==ORr.Location) then begin	  									itemqty = itemqty - StockMovrw.Quant;	  								end;	  							end;	  						end;  						end; RESETLOOP(StockMovr);  					end;  					if (itemqty < ORrw.Quant) then begin  						INr.Code = ORrw.ArtCode;  						ReadFirstMain(INr,1,true);  						if (INr.SerNrf == 1) then begin  							sercnt = ORrw.Quant - itemqty;  							for (k=0;k<sercnt;k=k+1) begin  								StockMov2rw.ArtCode = ORrw.ArtCode;		  						StockMov2rw.Spec = ORrw.Spec;		  						StockMov2rw.OrdQuant = 1;		  						StockMov2rw.SentQuant = 1;		  						StockMov2rw.Quant = 1;		  						//StockMov2rw.OldPrice = ORrw.BasePrice;		  						//StockMov2rw.NewPrice = ORrw.BasePrice;		  						StockMov2rw.IntORRow = i;		  						MatRowPut(StockMov2r,rownr,StockMov2rw);		  						rownr = rownr + 1;  							end;  						end else begin	  						StockMov2rw.ArtCode = ORrw.ArtCode;	  						StockMov2rw.Spec = ORrw.Spec;	  						StockMov2rw.OrdQuant = ORrw.Quant - itemqty;	  						StockMov2rw.SentQuant = ORrw.Quant - itemqty;	  						StockMov2rw.Quant = ORrw.Quant - itemqty;	  						//StockMov2rw.OldPrice = ORrw.BasePrice;		  					//StockMov2rw.NewPrice = ORrw.BasePrice;	  						StockMov2rw.IntORRow = i;	  						MatRowPut(StockMov2r,rownr,StockMov2rw);	  						rownr = rownr + 1;  						end;  					end;	  				end;  			end;  			if (rownr > 0) then begin  				StockMov2r.OrderNr = ORr.SerNr;  				StockMov2r.OrdTransDate = CurrentDate;  				StockMov2r.SerNr = NextSerNr("StockMovVc","",-1,false,"");  				StockMov2r.ToLocation = ORr.Location;  				if (RECORDSTORE(StockMov2r,true)) then begin  					CreateRecordLink(ORr,company,StockMov2r,company);  					CreateRecordLink(StockMov2r,company,ORr,company);  				end;  			end;	  		//end;	  	end;RETURN;end; //Edit***************************Sasha2,15:00 26.08.2014 }global //Edit***************************Sasha2,15:00 26.08.2014 {updating procedure TakeFromShopsFromORVcDm()BEGIN record ORVc ORr; row ORVc ORrw; longint wn; record StockMovVc StockMovr,StockMov2r,StockMov3r; row StockMovVc StockMovrw, StockMov2rw,StockMov3rw; record INVc INr; record SHVc SHr; row SHVc SHrw; record RetVc Retr; row RetVc Retrw; integer rwcnt,i,rwcnt1,j,rownr,company,k,sercnt; val itemqty; Boolean StockMovexists,TrHs,testf;   	rownr = 0; 	company = CurrentCompany; 	wn = CurWindow;  	GetWindowRecord(wn,ORr);  	if (WindowState(wn) == Rs_normal) then begin  		//if (ORr.OrderClass=="Shops") then begin  			rwcnt = MatRowCnt(ORr);  			RECORDNEW(StockMov2r);  			RECORDNEW(StockMov3r);  			StockMovr.OrderNr = ORr.SerNr;  			StockMovexists = ReadFirstKey("OrderNr",StockMovr,1,true);  			for (i=0;i<rwcnt;i=i+1) begin  				MatRowGet(ORr,i,ORrw);  				if ((ORrw.Quant - ORrw.Shipd2) > 0 and NonBlank(ORrw.ArtCode)) then begin  					itemqty = 0;  					if (StockMovexists) then begin  						while (LoopKey("OrderNr",StockMovr,1,true)) begin  							if (StockMovr.OrdFlag==1 and StockMovr.OKFlag==1 and StockMovr.OrderNr==ORr.SerNr) then begin		  						rwcnt1=MatRowCnt(StockMovr);		  						for (j=0;j<rwcnt1;j=j+1) begin		  							MatRowGet(StockMovr,j,StockMovrw);	  								testf = true;	  								if (StockMovrw.ArtCode!=ORrw.ArtCode and StockMovrw.IntORRow!=i) then begin testf = false; end;	  								if (testf) then begin										if (StockMovr.ToLocation==ORr.Location) then begin				  							itemqty = itemqty + StockMovrw.Quant;				  							if (NonBlank(StockMovrw.SerialNr)) then begin				  								CollectSerials(StockMov3r,StockMov3rw,StockMovrw.ArtCode,StockMovrw.SerialNr,1);				  							end;				  						end;				  						if (StockMovr.FrLocation==ORr.Location) then begin				  							itemqty = itemqty - StockMovrw.Quant;				  							if (NonBlank(StockMovrw.SerialNr)) then begin				  								CollectSerials(StockMov3r,StockMov3rw,StockMovrw.ArtCode,StockMovrw.SerialNr,-1);				  							end;				  						end; 									end;	  							end;	  						end;  						end; RESETLOOP(StockMovr);  						  						SHr.OrderNr = ORr.SerNr;						TrHs = true;						while (LoopKey("OrderKey",SHr,1,TrHs)) begin							if (SHr.OKFlag==1 and SHr.OrderNr==ORr.SerNr) then begin								rwcnt1=MatRowCnt(SHr);								for (j=0;j<rwcnt1;j=j+1) begin									MatRowGet(SHr,j,SHrw);									testf = true;  LogText(0,"SHr.SerNr= " &  SHr.SerNr & " SHrw.ArtCode= " &  SHrw.ArtCode &" SHrw.OrdRow= " & SHrw.OrdRow);									if (SHrw.ArtCode!=ORrw.ArtCode or SHrw.OrdRow!=i) then begin testf = false; end;									if (testf) then begin				  						itemqty = itemqty - SHrw.Ship;				  						if (NonBlank(SHrw.SerialNr)) then begin			  								CollectSerials(StockMov3r,StockMov3rw,StockMovrw.ArtCode,SHrw.SerialNr,-1);			  							end; 									end;								end;							end;						end; RESETLOOP(SHr);												Retr.OrdNr = ORr.SerNr;						TrHs = true;						while (LoopKey("OrdNr",Retr,1,TrHs)) begin							if (Retr.OKFlag==1 and Retr.OrdNr==ORr.SerNr) then begin								rwcnt1=MatRowCnt(Retr);								for (j=0;j<rwcnt1;j=j+1) begin									MatRowGet(Retr,j,Retrw);									testf = true;									if (Retrw.ArtCode!=ORrw.ArtCode or Retrw.OrdRow!=i) then begin testf = false; end;									if (testf) then begin				  						itemqty = itemqty + Retrw.Quant;				  						if (NonBlank(Retrw.SerialNr)) then begin			  								CollectSerials(StockMov3r,StockMov3rw,StockMovrw.ArtCode,Retrw.SerialNr,1);			  							end;									end;								end;							end;						end; RESETLOOP(Retr);  						  					end;  					if (itemqty > 0) then begin  						INr.Code = ORrw.ArtCode;  						ReadFirstMain(INr,1,true);  						if (INr.SerNrf == 1) then begin  							sercnt = MatRowCnt(StockMov3r);  							for (k=0;k<sercnt;k=k+1) begin  								MatRowGet(StockMov3r,k,StockMov3rw);  								if (StockMov3rw.ArtCode==ORrw.ArtCode and StockMov3rw.Quant > 0) then begin				  						StockMov2rw.ArtCode = ORrw.ArtCode;			  						StockMov2rw.Spec = ORrw.Spec;			  						StockMov2rw.OrdQuant = 1;			  						StockMov2rw.SentQuant = 1;			  						StockMov2rw.Quant = 1;			  						StockMov2rw.SerialNr = StockMov3rw.SerialNr;			  						//StockMov2rw.OldPrice = ORrw.BasePrice;//???					  				//StockMov2rw.NewPrice = ORrw.BasePrice;//???			  						StockMov2rw.IntORRow = i;			  						MatRowPut(StockMov2r,rownr,StockMov2rw);			  						rownr = rownr + 1;			  					end;		  					end;		  					end else begin	  						StockMov2rw.ArtCode = ORrw.ArtCode;	  						StockMov2rw.Spec = ORrw.Spec;	  						StockMov2rw.OrdQuant = itemqty;	  						StockMov2rw.SentQuant = itemqty;	  						StockMov2rw.Quant = itemqty;	  						StockMov2rw.SerialNr = "";	  						//StockMov2rw.OldPrice = ORrw.BasePrice;//???			  				//StockMov2rw.NewPrice = ORrw.BasePrice;//???	  						StockMov2rw.IntORRow = i;	  						MatRowPut(StockMov2r,rownr,StockMov2rw);	  						rownr = rownr + 1;	  					end;	  					end;	  				end;  			end;  			if (rownr > 0) then begin  				StockMov2r.OrderNr = ORr.SerNr;  				StockMov2r.OrdTransDate = CurrentDate;  				StockMov2r.SerNr = NextSerNr("StockMovVc","",-1,false,"");  				StockMov2r.FrLocation = ORr.Location;  				if (RECORDSTORE(StockMov2r,true)) then begin  					CreateRecordLink(ORr,company,StockMov2r,company);  					CreateRecordLink(StockMov2r,company,ORr,company);  				end;  			end;	  		//end;	  	end;RETURN;end;/*global //Edit***************************Sasha2,15:00 26.08.2014 { TakeFromShopsFromORVcDm using ItemHistVcupdating procedure TakeFromShopsFromORVcDm()BEGIN record ORVc ORr; row ORVc ORrw; longint wn; record StockMovVc StockMovr,StockMov2r; row StockMovVc StockMovrw, StockMov2rw; record INVc INr; record ItemHistVc IHr; integer rwcnt,i,rwcnt1,j,rownr,company; val itemqty; Boolean notserial,StockMovexists,TrHs,testf;  	rownr = 0; 	company = CurrentCompany; 	wn = CurWindow;  	GetWindowRecord(wn,ORr);  	if (WindowState(wn) == Rs_normal) then begin  		//if (ORr.OrderClass=="Shops" ) then begin  			rwcnt=MatRowCnt(ORr);  			RECORDNEW(StockMov2r);  			StockMovr.OrderNr = ORr.SerNr;  			StockMovexists = ReadFirstKey("OrderNr",StockMovr,1,true);  			for (i=0;i<rwcnt;i=i+1) begin  				MatRowGet(ORr,i,ORrw);  				if ((ORrw.Quant - ORrw.Shipd2) > 0 and NonBlank(ORrw.ArtCode)) then begin  					itemqty = 0;  					notserial = false;  					INr.Code = ORrw.ArtCode;  					ReadFirstMain(INr,1,true);  					if (StockMovexists) then begin  						while (LoopKey("OrderNr",StockMovr,1,true)) begin	  						rwcnt1=MatRowCnt(StockMovr);	  						for (j=0;j<rwcnt1;j=j+1) begin	  							MatRowGet(StockMovr,j,StockMovrw);	  							if (StockMovr.OrdFlag==1 and StockMovr.OKFlag==1 and StockMovrw.ArtCode==ORrw.ArtCode and StockMovrw.IntORRow==i) then begin	  								IHr.ArtCode = ORrw.ArtCode;	  								IHr.Location = ORr.Location;	  								TrHs = true;	  								while(LoopKey("ActiveLocQty",IHr,2,TrHs)) begin	  									testf = true;	  									if (IHr.ArtCode!=ORrw.ArtCode or IHr.Location!=ORr.Location) then begin testf = false; TrHs = false; end;	  									if (IHr.FileName!="StockMovVc" or IHr.TransNr!=StockMovr.SerNr) then begin testf = false; end;	  									if (INr.SerNrf==1 and IHr.SerialNr!=StockMovrw.SerialNr) then begin  testf = false; end;	  									if (testf) then begin	  										if (INr.SerNrf == 1) then begin	  											StockMov2rw.ArtCode = ORrw.ArtCode;						  						StockMov2rw.Spec = ORrw.Spec;						  						StockMov2rw.OrdQuant = 1;						  						StockMov2rw.SentQuant = 1;						  						StockMov2rw.Quant = 1;						  						StockMov2rw.SerialNr = IHr.SerialNr;						  						StockMov2rw.OldPrice = ORrw.BasePrice;//???		  										StockMov2rw.NewPrice = ORrw.BasePrice;//???						  						StockMov2rw.IntORRow = i;						  						MatRowPut(StockMov2r,rownr,StockMov2rw);						  						rownr = rownr + 1;	  											notserial = false;  											end else begin  												itemqty = itemqty + IHr.RemQty;  												notserial = true;  											end;	  									end;	  								end; RESETLOOP(IHr);	  							end;	  						end;  						end; RESETLOOP(StockMovr);  					end;  					if (itemqty > 0 and notserial == true) then begin  						StockMov2rw.ArtCode = ORrw.ArtCode;  						StockMov2rw.Spec = ORrw.Spec;  						StockMov2rw.OrdQuant = itemqty;  						StockMov2rw.SentQuant = itemqty;  						StockMov2rw.Quant = itemqty;  						StockMov2rw.SerialNr = "";  						StockMov2rw.OldPrice = ORrw.BasePrice;//???		  				StockMov2rw.NewPrice = ORrw.BasePrice;//???  						StockMov2rw.IntORRow = i;  						MatRowPut(StockMov2r,rownr,StockMov2rw);  						rownr = rownr + 1;  					end;	  				end;  			end;  			if (rownr > 0) then begin  				StockMov2r.OrderNr = ORr.SerNr;  				StockMov2r.OrdTransDate = CurrentDate;  				StockMov2r.SerNr = NextSerNr("StockMovVc","",-1,false,"");  				StockMov2r.FrLocation = ORr.Location;  				if (RECORDSTORE(StockMov2r,true)) then begin  					CreateRecordLink(ORr,company,StockMov2r,company);  					CreateRecordLink(StockMov2r,company,ORr,company);  				end;  			end;	  		//end;	  	end;RETURN;end; */