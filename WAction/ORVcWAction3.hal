remote updating procedure SendToShopsFromORVcRoutine(var record StockMovVc,record ORVc,var integer,integer);remote updating procedure TakeFromShopsFromORVcRoutine(var record StockMovVc,record ORVc,var integer,integer);remote updating procedure HandleSplitSerialItemsORVc(var record ORVc,Integer,var string); //Edit***************************Sasha2,11:38 23.07.2015global //Edit***************************Sasha2,15:00 26.08.2014 {updating procedure SplitSerialItemsORVcDm()BEGIN longint wn; record ORVc ORr; integer rwcnt; string 255 warning; 	 	wn = CurWindow;	GetWindowRecord(wn,ORr);	DeselectWindow(wn,true);	rwcnt = MatRowCnt(ORr);  if (WindowState(wn) == Rs_normal and rwcnt>0) then begin  	if (ORr.OKFlag==0) then begin  	  HandleSplitSerialItemsORVc(ORr,rwcnt,warning);  	end else begin  	  warning = "Oreder is OKed";  	end;  	if (Blank(warning)) then begin  	  PutWindowRecord(wn,ORr);  	end else begin  	  MessageBox(0,warning);  	end;  end; RETURN;end; //Edit***************************Sasha2,15:00 26.08.2014 }global //Edit***************************Sasha2,15:00 26.08.2014 {updating procedure SendToShopsFromORVcDm()BEGIN longint wn; record ORVc ORr; record StockMovVc StockMovr; integer res,company; 	 	res = 0; 	company = CurrentCompany; 	wn = CurWindow;  	GetWindowRecord(wn,ORr);    if (WindowState(wn) == Rs_normal) then begin    	RECORDNEW(StockMovr);    	SendToShopsFromORVcRoutine(StockMovr,ORr,res,company);    end;    if (res>0) then begin    	OpenWindow("StockMovDClass",1,0,"","",StockMovr);        UpdateBrowses("StockMov");    end; RETURN;end; //Edit***************************Sasha2,15:00 26.08.2014 }global //Edit***************************Sasha2,15:00 26.08.2014 {updating procedure TakeFromShopsFromORVcDm()BEGIN longint wn; record ORVc ORr; record StockMovVc StockMovr; integer res,company; 	 	res = 0; 	company = CurrentCompany; 	wn = CurWindow;	GetWindowRecord(wn,ORr);  if (WindowState(wn) == Rs_normal) then begin  	RECORDNEW(StockMovr);  	TakeFromShopsFromORVcRoutine(StockMovr,ORr,res,company);  end;  if (res>0) then begin  	OpenWindow("StockMovDClass",1,0,"","",StockMovr);      UpdateBrowses("StockMov");  end;RETURN;end;/*global //Edit***************************Sasha2,15:00 26.08.2014 { TakeFromShopsFromORVcDm using ItemHistVcupdating procedure TakeFromShopsFromORVcDm()BEGIN record ORVc ORr; row ORVc ORrw; longint wn,nwn; record StockMovVc StockMovr,StockMov2r; row StockMovVc StockMovrw, StockMov2rw; record INVc INr; record ItemHistVc IHr; integer rwcnt,i,rwcnt1,j,rownr,company; val itemqty; Boolean notserial,StockMovexists,TrHs,testf;  	rownr = 0; 	company = CurrentCompany; 	wn = CurWindow;  	GetWindowRecord(wn,ORr);  	if (WindowState(wn) == Rs_normal) then begin  		//if (ORr.OrderClass=="Shops" ) then begin  			rwcnt=MatRowCnt(ORr);  			RECORDNEW(StockMov2r);  			StockMovr.OrderNr = ORr.SerNr;  			StockMovexists = ReadFirstKey("OrderNr",StockMovr,1,true);  			for (i=0;i<rwcnt;i=i+1) begin  				MatRowGet(ORr,i,ORrw);  				if ((ORrw.Quant - ORrw.Shipd2) > 0 and NonBlank(ORrw.ArtCode)) then begin  					itemqty = 0;  					notserial = false;  					INr.Code = ORrw.ArtCode;  					ReadFirstMain(INr,1,true);  					if (StockMovexists) then begin  						while (LoopKey("OrderNr",StockMovr,1,true)) begin	  						rwcnt1=MatRowCnt(StockMovr);	  						for (j=0;j<rwcnt1;j=j+1) begin	  							MatRowGet(StockMovr,j,StockMovrw);	  							if (StockMovr.OrdFlag==1 and StockMovr.OKFlag==1 and StockMovrw.ArtCode==ORrw.ArtCode and StockMovrw.ORRow==i) then begin	  								IHr.ArtCode = ORrw.ArtCode;	  								IHr.Location = ORr.Location;	  								TrHs = true;	  								while(LoopKey("ActiveLocQty",IHr,2,TrHs)) begin	  									testf = true;	  									if (IHr.ArtCode!=ORrw.ArtCode or IHr.Location!=ORr.Location) then begin testf = false; TrHs = false; end;	  									if (IHr.FileName!="StockMovVc" or IHr.TransNr!=StockMovr.SerNr) then begin testf = false; end;	  									if (INr.SerNrf==1 and IHr.SerialNr!=StockMovrw.SerialNr) then begin  testf = false; end;	  									if (testf) then begin	  										if (INr.SerNrf == 1) then begin	  											StockMov2rw.ArtCode = ORrw.ArtCode;						  						StockMov2rw.Spec = ORrw.Spec;						  						StockMov2rw.OrdQuant = 1;						  						StockMov2rw.SentQuant = 1;						  						StockMov2rw.Quant = 1;						  						StockMov2rw.SerialNr = IHr.SerialNr;						  						StockMov2rw.OldPrice = ORrw.BasePrice;//???		  										StockMov2rw.NewPrice = ORrw.BasePrice;//???						  						StockMov2rw.ORRow = i;						  						MatRowPut(StockMov2r,rownr,StockMov2rw);						  						rownr = rownr + 1;	  											notserial = false;  											end else begin  												itemqty = itemqty + IHr.RemQty;  												notserial = true;  											end;	  									end;	  								end; RESETLOOP(IHr);	  							end;	  						end;  						end; RESETLOOP(StockMovr);  					end;  					if (itemqty > 0 and notserial == true) then begin  						StockMov2rw.ArtCode = ORrw.ArtCode;  						StockMov2rw.Spec = ORrw.Spec;  						StockMov2rw.OrdQuant = itemqty;  						StockMov2rw.SentQuant = itemqty;  						StockMov2rw.Quant = itemqty;  						StockMov2rw.SerialNr = "";  						StockMov2rw.OldPrice = ORrw.BasePrice;//???		  				StockMov2rw.NewPrice = ORrw.BasePrice;//???  						StockMov2rw.ORRow = i;  						MatRowPut(StockMov2r,rownr,StockMov2rw);  						rownr = rownr + 1;  					end;	  				end;  			end;  			if (rownr > 0) then begin  				StockMov2r.OrderNr = ORr.SerNr;  				StockMov2r.OrdTransDate = CurrentDate;  				StockMov2r.SerNr = NextSerNr("StockMovVc","",-1,false,"");  				StockMov2r.FrLocation = ORr.Location;  				if (RECORDSTORE(StockMov2r,true)) then begin  					CreateRecordLink(ORr,company,StockMov2r,company);  					CreateRecordLink(StockMov2r,company,ORr,company);  				end;  			end;	  		//end;	  	end;RETURN;end; */