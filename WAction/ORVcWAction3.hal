remote updating procedure SendToShopsFromORVcRoutine(var record StockMovVc,record ORVc,var integer,integer);remote updating procedure TakeFromShopsFromORVcRoutine(var record StockMovVc,record ORVc,var integer,integer);remote updating procedure HandleSplitSerialItemsORVc(var record ORVc,Integer,var string); //Edit***************************Sasha2,11:38 23.07.2015external function roundmode SetRoundModeD(Integer);// Edit ************************** Thursday, 11 February 2016 11:07:50external procedure ValToText(val,Integer,string,string,var string);// Edit ************************** Thursday, 11 February 2016 11:12:36SetLangMode(LangUkrainian,"UKR",0);global //Edit***************************Sasha2,15:00 26.08.2014 {updating procedure SplitSerialItemsORVcDm()BEGIN longint wn; record ORVc ORr; integer rwcnt; string 255 warning; 	 	wn = CurWindow;	GetWindowRecord(wn,ORr);	DeselectWindow(wn,true);	rwcnt = MatRowCnt(ORr);  if (WindowState(wn) == Rs_normal and rwcnt>0) then begin  	if (ORr.OKFlag==0) then begin  	  HandleSplitSerialItemsORVc(ORr,rwcnt,warning);  	end else begin  	  warning = "Oreder is OKed";  	end;  	if (Blank(warning)) then begin  	  PutWindowRecord(wn,ORr);  	end else begin  	  MessageBox(0,warning);  	end;  end; RETURN;end; //Edit***************************Sasha2,15:00 26.08.2014 }global //Edit***************************Sasha2,15:00 26.08.2014 {updating procedure SendToShopsFromORVcDm()BEGIN longint wn; record ORVc ORr; record StockMovVc StockMovr; integer res,company; 	 	res = 0; 	company = CurrentCompany; 	wn = CurWindow;  	GetWindowRecord(wn,ORr);    if (WindowState(wn) == Rs_normal) then begin    	RECORDNEW(StockMovr);    	SendToShopsFromORVcRoutine(StockMovr,ORr,res,company);    end;    if (res>0) then begin    	OpenWindow("StockMovDClass",1,0,"","",StockMovr);        UpdateBrowses("StockMov");    end; RETURN;end; //Edit***************************Sasha2,15:00 26.08.2014 }global //Edit***************************Sasha2,15:00 26.08.2014 {updating procedure TakeFromShopsFromORVcDm()BEGIN longint wn; record ORVc ORr; record StockMovVc StockMovr; integer res,company; 	 	res = 0; 	company = CurrentCompany; 	wn = CurWindow;	GetWindowRecord(wn,ORr);  if (WindowState(wn) == Rs_normal) then begin  	RECORDNEW(StockMovr);  	TakeFromShopsFromORVcRoutine(StockMovr,ORr,res,company);  end;  if (res>0) then begin  	OpenWindow("StockMovDClass",1,0,"","",StockMovr);      UpdateBrowses("StockMov");  end;RETURN;end;/*global //Edit***************************Sasha2,15:00 26.08.2014 { TakeFromShopsFromORVcDm using ItemHistVcupdating procedure TakeFromShopsFromORVcDm()BEGIN record ORVc ORr; row ORVc ORrw; longint wn,nwn; record StockMovVc StockMovr,StockMov2r; row StockMovVc StockMovrw, StockMov2rw; record INVc INr; record ItemHistVc IHr; integer rwcnt,i,rwcnt1,j,rownr,company; val itemqty; Boolean notserial,StockMovexists,TrHs,testf;  	rownr = 0; 	company = CurrentCompany; 	wn = CurWindow;  	GetWindowRecord(wn,ORr);  	if (WindowState(wn) == Rs_normal) then begin  		//if (ORr.OrderClass=="Shops" ) then begin  			rwcnt=MatRowCnt(ORr);  			RECORDNEW(StockMov2r);  			StockMovr.OrderNr = ORr.SerNr;  			StockMovexists = ReadFirstKey("OrderNr",StockMovr,1,true);  			for (i=0;i<rwcnt;i=i+1) begin  				MatRowGet(ORr,i,ORrw);  				if ((ORrw.Quant - ORrw.Shipd2) > 0 and NonBlank(ORrw.ArtCode)) then begin  					itemqty = 0;  					notserial = false;  					INr.Code = ORrw.ArtCode;  					ReadFirstMain(INr,1,true);  					if (StockMovexists) then begin  						while (LoopKey("OrderNr",StockMovr,1,true)) begin	  						rwcnt1=MatRowCnt(StockMovr);	  						for (j=0;j<rwcnt1;j=j+1) begin	  							MatRowGet(StockMovr,j,StockMovrw);	  							if (StockMovr.OKFlag==1 and StockMovrw.ArtCode==ORrw.ArtCode and StockMovrw.ORRow==i) then begin	  								IHr.ArtCode = ORrw.ArtCode;	  								IHr.Location = ORr.Location;	  								TrHs = true;	  								while(LoopKey("ActiveLocQty",IHr,2,TrHs)) begin	  									testf = true;	  									if (IHr.ArtCode!=ORrw.ArtCode or IHr.Location!=ORr.Location) then begin testf = false; TrHs = false; end;	  									if (IHr.FileName!="StockMovVc" or IHr.TransNr!=StockMovr.SerNr) then begin testf = false; end;	  									if (INr.SerNrf==1 and IHr.SerialNr!=StockMovrw.SerialNr) then begin  testf = false; end;	  									if (testf) then begin	  										if (INr.SerNrf == 1) then begin	  											StockMov2rw.ArtCode = ORrw.ArtCode;						  						StockMov2rw.Spec = ORrw.Spec;						  						StockMov2rw.OrdQuant = 1;						  						StockMov2rw.SentQuant = 1;						  						StockMov2rw.Quant = 1;						  						StockMov2rw.SerialNr = IHr.SerialNr;						  						StockMov2rw.OldPrice = ORrw.BasePrice;//???		  										StockMov2rw.NewPrice = ORrw.BasePrice;//???						  						StockMov2rw.ORRow = i;						  						MatRowPut(StockMov2r,rownr,StockMov2rw);						  						rownr = rownr + 1;	  											notserial = false;  											end else begin  												itemqty = itemqty + IHr.RemQty;  												notserial = true;  											end;	  									end;	  								end; RESETLOOP(IHr);	  							end;	  						end;  						end; RESETLOOP(StockMovr);  					end;  					if (itemqty > 0 and notserial == true) then begin  						StockMov2rw.ArtCode = ORrw.ArtCode;  						StockMov2rw.Spec = ORrw.Spec;  						StockMov2rw.OrdQuant = itemqty;  						StockMov2rw.SentQuant = itemqty;  						StockMov2rw.Quant = itemqty;  						StockMov2rw.SerialNr = "";  						StockMov2rw.OldPrice = ORrw.BasePrice;//???		  				StockMov2rw.NewPrice = ORrw.BasePrice;//???  						StockMov2rw.ORRow = i;  						MatRowPut(StockMov2r,rownr,StockMov2rw);  						rownr = rownr + 1;  					end;	  				end;  			end;  			if (rownr > 0) then begin  				StockMov2r.OrderNr = ORr.SerNr;  				StockMov2r.OrdTransDate = CurrentDate;  				StockMov2r.SerNr = NextSerNr("StockMovVc","",-1,false,"");  				StockMov2r.FrLocation = ORr.Location;  				if (RECORDSTORE(StockMov2r,true)) then begin  					CreateRecordLink(ORr,company,StockMov2r,company);  					CreateRecordLink(StockMov2r,company,ORr,company);  				end;  			end;	  		//end;	  	end;RETURN;end; */function string 20 GetMonthName(date d1,boolean upcase)begin	string 20 res;	integer month;		month = getmonth(d1);		if(upcase)then begin		switch(month)begin			case 1: res = "Січня";			case 2: res = "Лютого";			case 3: res = "Березня";			case 4: res = "Квітня";			case 5: res = "Травня";			case 6: res = "Червня";			case 7: res = "Липня";			case 8: res = "Серпня";			case 9: res = "Вересня";			case 10: res = "Жовтня";			case 11: res = "Листопада";			case 12:	res = "Грудня";		end;	end else begin		switch(month)begin			case 1: res = "січня";			case 2: res = "лютого";			case 3: res = "березня";			case 4: res = "квітня";			case 5: res = "травня";			case 6: res = "червня";			case 7: res = "липня";			case 8: res = "серпня";			case 9: res = "вересня";			case 10: res = "жовтня";			case 11: res = "листопада";			case 12:	res = "грудня";		end;	end;		GetMonthName = res;return;end;global procedure ORtoExcell1Remote(record ORVc ORr)begin	record CUVc CUr;	row ORVc ORrw;	integer i,mtrw,cnt;	val t;	string 200 tstr;			outstring(0,0,"ВИДАТКОВА НАКЛАДНА № " & ORr.OfficialSerNr & "  від   " & getday(ORr.OrdDate) & " " & GetMonthName(ORr.OrdDate,false) & " " & getyear(ORr.OrdDate) & " р.",false);		outstring(0,0,"Постачальник:",false); 	outstring(1,0,"ТОВАРИСТВО З ОБМЕЖЕНОЮ ВІДПОВІДАЛЬНІСТЮ\" АЙДІСТРІБУШН\"",true);		outstring(0,0,"Код ЄДРПОУ:",false); 	outstring(1,0,"40038333",true);		outstring(0,0,"Адреса:",false); 	outstring(1,0,"вул. Велика Васильківська  будинок 139 офіс 329, м. Київ, 03150",true);		outstring(0,0,"Покупець:",false); 	outstring(1,0,ORr.Addr0,true);		CUr.Code = ORr.CustCode;	readfirstmain(CUr,1,true);	outstring(0,0,"Код ЄДРПОУ:",false); 	outstring(1,0,CUr.RegNr1,true);		outstring(0,0,"Адреса:",false); 	outstring(1,0,ORr.Addr1,true);		outstring(0,0,"Підстава:",false); 	outstring(1,0,"Рахунок на сплату № " & ORr.RahSplatNom,true);		outstring(0,0,"Договір:",false); 	outstring(1,0,"Договір поставки № " & ORr.DogPostNom,true);		outstring(0,0,"№  з/п",false); 	outstring(0,0,"Артикул",false); 	outstring(0,0,"Найменування",false); 	outstring(0,0,"Одиниця виміру",false); 	outstring(0,0,"Кількість",false); 	outstring(0,0,"Ціна",false); 	outstring(0,0,"Сума",false); 		mtrw = matrowcnt(ORr);	cnt = 1;	For(i=0;i<mtrw;i=i+1) begin		matrowget(ORr,i,ORrw);		if(ORrw.stp==1 and nonblank(ORrw.ArtCode))then begin			outstring(0,0,cnt,false); 			outstring(0,0,ORrw.ArtCode,false); 			outstring(0,0,ORrw.Spec,false); 			outstring(0,0,"шт.",false); 			outstring(0,0,ORrw.Quant,false); 			outstring(0,0,ORrw.Price,false); 			outstring(0,0,ORrw.Sum,false); 			cnt = cnt + 1;		end;	end; 		outstring(0,0,"Разом без ПДВ:",false); 	outstring(1,0,ORr.Sum4 - round(ORr.Sum4/6,SetRoundModeD(2)),true);	outstring(0,0,"ПДВ:",false);	outstring(1,0,round(ORr.Sum4/6,SetRoundModeD(2)),true);	outstring(0,0,"Всього:",false);	outstring(1,0,ORr.Sum4,true);		outstring(0,0,"Всього:",false); 	t = ORr.Sum4;	ValToText(t,M4Val,"UAHIB","UKR",tstr);	outstring(1,0,tstr,true);		outstring(0,0,"Відпустив:",false); 	outstring(0,0,"Директор Попадюк О.В.",false); 	outstring(0,0,"Місце складання:  м.Київ",false); 		outstring(0,0,"Отримав:",false); 	outstring(0,0,"Ім`я",false); 	outstring(0,0,"Доручення №",false); 	return;end;