Global updating procedure ImportPLIn()
begin
	record PLVc PLr,PL2r;
	Integer i;
	array string 255 sfield;
	record INVc INr;
	record PLDefVc PLDr;
	val price;		
		
	while (TestEOF()==false) begin
	  for (i=0;i<3;i=i+1) begin
      	sfield[i]=ImportField;
      end;
      INr.Code = sfield[1];
      if(readfirstmain(INr,1,true))then begin
        PLDr.Code = sfield[0];
        if(readfirstmain(PLDr,1,true))then begin
          if(nonblank(sfield[2]))then begin
          	PLr.ArtCode = INr.Code;
          	PLr.PLCode = PLDr.Code;
          	if(readfirstmain(PLr,2,true))then begin
							price = evaltoval(sfield[2]);
							if(price>0)then begin
								RecordCopy(PL2r,PLr);
								PLr.ExVatPrice = price;
								RecordUpdate(PL2r,PLr,true);
							end;       
            end else begin
            	price = evaltoval(sfield[2]);
							if(price>0)then begin
								recordnew(PLr);
								PLr.PLCode = PLDr.Code;
								PLr.ArtCode = INr.Code;
								PLr.Comment = INr.Name;
								PLr.ExVatPrice = price;
								RecordInsert(PLr,true);
							end;
            end;     
          end;
        end;
      end;
      NextImportLine(true);
	end;

 return;
end;
	 

	 
	
	 
Global updating procedure ImportPLInUUID()
begin
	record PLVc PLr,PL2r;
	Integer i;
	array string 255 sfield;
	record INVc INr;
	record PLDefVc PLDr;
	val price;
	string 20 artcode,uid,plcode;
	uuid id;		
		
	while (TestEOF()==false) begin
	  plcode = importfield;
	  artcode = importfield;
	  uid = importfield;
	  
	  PLr.PLCode = plcode;
	  PLr.ArtCode = artcode;
	  if(readfirstmain(PLr,2,true))then begin
	  	PLr.UUID = StringToUUID(uid);
	  	recordstore(PLr,true);
	  end;
	  
    NextImportLine(true);
	end;

 return;
end;
	 
	 
global
updating procedure ImpDocVc()
BEGIN

    RegisterImport("doc3");

  RETURN;
END;

global
updating procedure ImpStylesVc()
BEGIN

    RegisterImport("styles2");

  RETURN;
END;
