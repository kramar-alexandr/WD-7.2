external updating procedure AutoRun();
external updating procedure BuhExportEn();
external procedure RetailSalesEn();
external procedure ManagersFullStockEn();

SetLangMode(LangRussian,"RUS",0);
  
global webpublic updating Procedure WebRunRetailSalesEn() //Edit***************************Sasha2,15:18 04.07.2014
begin
	integer compnr;
	
	compnr = stringtoint(webgetarg("compnr"));
	
	SetCompany(compnr,false);
		RetailSalesEn;
	ResetCompany(compnr);  
	
return;
end; 


global webpublic updating Procedure WebRunManagersFullStockEnEn() //Edit***************************Sasha2,15:18 04.07.2014
begin
	integer compnr;
	
	compnr = stringtoint(webgetarg("compnr"));
	
	SetCompany(compnr,false);
		ManagersFullStockEn;
	ResetCompany(compnr);  
	
return;
end; 

global webpublic updating Procedure WebRunAutosendReports() //Edit***************************Sasha2,15:18 04.07.2014
begin

	AutoRun;

return;
end; 

global webpublic updating procedure WebBuhExportEn()
begin
	string 10 compnr;
	integer comp;
	
	compnr = webgetarg("compnr");
	
	if(blank(compnr))then begin
		comp = 0;
	end else begin
		comp = stringtoint(compnr);
	end;
	
	SetCompany(comp,false);
		BuhExportEn;
	ResetCompany(comp);  
	

return;
end;


global webpublic updating procedure WebCheckSerialNrs()
begin
	string 10 compnr;
	integer comp;
	record ItemStatusVc ISr;
	record SerBalVc SBr;
	record ItemHistVc IHr;
	boolean TrHs,testf;
	val qty;
	
	compnr = webgetarg("compnr");
	
	if(nonblank(compnr))then begin
		setcompany(stringtoint(compnr),false);
		while(loopmain(SBr,1,true))begin
			if(SBr.Quant>0)then begin
				IHr.ArtCode = SBr.Item;
				IHr.SerialNr = SBr.Serial;
				TrHs = true;
				qty = blankval;
				while(loopkey("ArtCodeSerialNr",IHr,2,TrHs))begin
					testf = true;
					if(IHr.ArtCode!=SBr.Item)then begin TrHs = false; testf = false; end;
					if(IHr.SerialNr!=SBr.Serial)then begin TrHs = false; testf = false; end;
					if(IHr.Location!=SBr.Location)then begin testf = false; end;
					if(IHr.StockAffectf==0)then begin testf = false; end;
					
					if(testf)then begin
						qty = qty + IHr.Qty;
					end;
				end;
				resetloop(IHr);
				if(qty!=SBr.Quant)then begin
					logtext(0,"Error serbal " & SBr.Item & "  " & SBr.Location & " " & SBr.Serial & "  " & qty & " " & SBr.Quant);
					if(qty==0)then begin
						SBr.Quant = 0;
						//recordstore(SBr,true);
					end;
					if(qty==1 and SBr.Quant>1)then begin
						SBr.Quant = 1;
						recordstore(SBr,true);
					end;
				end;
			end;
		end;
		comp = 0;
	end; 
	

return;
end;



global webpublic updating procedure WebUpdateORSalesGroup()
begin
  record ORVc ORr;
  
  setcompany(13,false);
  
  ORr.SerNr = 280303;
  while(loopmain(ORr,1,true))begin
    
    /*if(ORr.SalesGroup=="NP")then begin
      if(ORr.OrderClass=="INTPC")then begin
        ORr.SalesGroup = "NOTNP";
        recordstore(ORr,true);
      end;
    end;*/
    /*if(nonblank(ORr.TerminalID))then begin
      ORr.SalesGroup = "CREDI"; 
    end else begin
      ORr.SalesGroup = "NOCRE";
    end;*/
    if(left(ORr.CustOrdNr,1)=="M")then begin
      ORr.SalesGroup = "OWN";
      recordstore(ORr,true);
    end;
    
    
  end;
  
return;
end;


global webpublic updating procedure WebUpdateORiswebshop()
begin
  record ORVc ORr;
  row ORVc ORrw;
  boolean TrHs;
  integer i,rwcnt;
  
  setcompany(13,false);
  
  ORr.OKFlag = 0;
  TrHs = true;
  while(loopkey("OKFlag",ORr,1,TrHs))begin
    if(ORr.OKFlag==0)then begin
      if(ORr.CustOrdNr!=("M" & ORr.SerNr))then begin
        logtext(0,ORr.SerNr);
        rwcnt = matrowcnt(ORr);
        for(i=0;i<rwcnt;i=i+1)begin
          matrowget(ORr,i,ORrw);
          ORrw.iswebshop = 1;
          matrowput(ORr,i,ORrw);
        end;
        recordstore(ORr,true);
      end;
    end else begin
        TrHs = false;
    end;    
  end;
  
return;
end;



global webpublic updating procedure WebFicIFileIHr()
begin
  record ItemHistVc IHr,sourceIHr;
  record INVc INr;
  
  setcompany(13,false);
  
  while(loopmain(IHr,1,true))begin
    if(IHr.StockAffectf==1)then begin
      if(blank(IHr.InFileName))then begin
        INr.Code = IHr.ArtCode;
        if(readfirstmain(INr,1,true))then begin
          if(INr.ItemType==kItemTypeStocked)then begin
            sourceIHr.SerNr = IHr.Source;
            if(readfirstmain(sourceIHr,1,true))then begin
              if(nonblank(sourceIHr.InFileName))then begin
                IHr.InFileName = sourceIHr.InFileName;
                IHr.InSerNr = sourceIHr.InSerNr;
                IHr.InRow = sourceIHr.InRow;
                IHr.TotCostPriceCurncy = sourceIHr.TotCostPriceCurncy;
                IHr.RemCostPriceCurncy = sourceIHr.TotCostPriceCurncy*(sourceIHr.RemCostPrice/sourceIHr.TotCostPrice);
                recordstore(IHr,true);
                logtext(0,"blank InFileName " & IHr.ArtCode & " " & IHr.FileName);
              end;
            end;
            
          end;
        end;
      end;
    end;
  end;
  
return;
end;

global updating procedure UpdateIV(record IVVc IVr)
begin
  
  logtext(0,"UpdateIV " & IVr.SerNr);

  recordstore(IVr,true);
return;
end;

global webpublic procedure WebFillSAlesmanToIV()
begin
  record IVVc IVr;
  row IVVc IVrw;
  record ORVc ORr;
  row ORVc ORrw;
  integer i,rwcnt;
  boolean chngd;
  
  logtext(0,"WebFillSAlesmanToIV");

  
  setcompany(13,false);
  IVr.InvDate = stringtodate("30/11/2023");
  while(loopkey("InvDate",IVr,1,true))begin
    logtext(0,"IVr " & IVr.SerNr);

    chngd = false;
    rwcnt = matrowcnt(IVr);
    if(IVr.OrderNr>-1)then begin
      ORr.SerNr = IVr.OrderNr;
      if(readfirstmain(ORr,1,true))then begin
        for(i=0;i<rwcnt;i=i+1)begin
          matrowget(IVr,i,IVrw);
          if(IVrw.stp==1)then begin
            matrowget(ORr,IVrw.OrdRow,ORrw);
            if(IVrw.DiscApprovedBy!=ORrw.DiscApprovedBy)then begin
              logtext(0,IVrw.DiscApprovedBy & " -> " & ORrw.DiscApprovedBy);

              IVrw.DiscApprovedBy = ORrw.DiscApprovedBy;
              matrowput(IVr,i,IVrw);
              chngd = true;
            end;
          end;
        end;
        if(chngd)then begin
          qupdating.UpdateIV(IVr);
          //recordstore(IVr,true);
        end;
      end;
    end;
  end;
return;
end;


global updating procedure FillSAlesmanToIV(record ORVc ORr)
begin
  record IVVc IVr;
  row IVVc IVrw;
  row ORVc ORrw;
  integer i,rwcnt;
  boolean chngd;
  boolean TrHs;
  
  IVr.OrderNr = ORr.SerNr;
  TrHs = true;
  while(loopkey("OrderNr",IVr,1,TrHs))begin
    chngd = false;
    rwcnt = matrowcnt(IVr);
    if(IVr.OrderNr==ORr.SerNr)then begin
      for(i=0;i<rwcnt;i=i+1)begin
        matrowget(IVr,i,IVrw);
        if(IVrw.stp==1)then begin
          matrowget(ORr,IVrw.OrdRow,ORrw);
          if(IVrw.DiscApprovedBy!=ORrw.DiscApprovedBy)then begin
            IVrw.DiscApprovedBy = ORrw.DiscApprovedBy;
            matrowput(IVr,i,IVrw);
            chngd = true;
          end;
        end;
      end;
      if(chngd)then begin
        recordstore(IVr,true);
      end;
    end else begin
      TrHs = false;
    end;
  end;
return;
end;

global updating procedure orstore(record ORVc ORr)
begin
  
  recordstore(ORr,true);
  
return;
end;

global webpublic procedure WebCloseOldOrders()
begin
  record ORVc ORr;
  
  setcompany(13,false);
  
  while(loopmain(ORr,1,true))begin
    if(blank(ORr.OrderStatusText) and ORr.OrderStatusCode==0)then begin
      ORr.OrderStatusCode = 8;
      ORr.OrderStatusText = "Автозакриття";	
      qupdating.orstore(ORr);
    end;
    if(ORr.OrdDate<addday(currentdate,-7))then begin
      if(ORr.OrderStatusCode==0 or ORr.OrderStatusCode==1 or ORr.OrderStatusCode==2 or ORr.OrderStatusCode==6 or ORr.OrderStatusCode==7)then begin
        ORr.OrderStatusCode = 8;
        ORr.OrderStatusText = "Автозакриття";	
        qupdating.orstore(ORr);
      end;
    end;
  end;
  
return;
end;
