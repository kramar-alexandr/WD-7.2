external updating procedure AutoRun();
external updating procedure BuhExportEn();
external procedure RetailSalesEn();
external procedure ManagersFullStockEn();


global webpublic updating Procedure WebRunRetailSalesEn() //Edit***************************Sasha2,15:18 04.07.2014
begin
	integer compnr;
	
	compnr = stringtoint(webgetarg("compnr"));
	
	SetCompany(compnr,false);
		RetailSalesEn;
	ResetCompany(compnr);  
	
return;
end; 


global webpublic updating Procedure WebRunManagersFullStockEnEn() //Edit***************************Sasha2,15:18 04.07.2014
begin
	integer compnr;
	
	compnr = stringtoint(webgetarg("compnr"));
	
	SetCompany(compnr,false);
		ManagersFullStockEn;
	ResetCompany(compnr);  
	
return;
end; 

global webpublic updating Procedure WebRunAutosendReports() //Edit***************************Sasha2,15:18 04.07.2014
begin

	AutoRun;

return;
end; 

global webpublic updating procedure WebBuhExportEn()
begin
	string 10 compnr;
	integer comp;
	
	compnr = webgetarg("compnr");
	
	if(blank(compnr))then begin
		comp = 0;
	end else begin
		comp = stringtoint(compnr);
	end;
	
	SetCompany(comp,false);
		BuhExportEn;
	ResetCompany(comp);  
	

return;
end;


global webpublic updating procedure WebCheckSerialNrs()
begin
	string 10 compnr;
	integer comp;
	record ItemStatusVc ISr;
	record SerBalVc SBr;
	record ItemHistVc IHr;
	boolean TrHs,testf;
	val qty;
	
	compnr = webgetarg("compnr");
	
	if(nonblank(compnr))then begin
		setcompany(stringtoint(compnr),false);
		while(loopmain(SBr,1,true))begin
			if(SBr.Quant>0)then begin
				IHr.ArtCode = SBr.Item;
				IHr.SerialNr = SBr.Serial;
				TrHs = true;
				qty = blankval;
				while(loopkey("ArtCodeSerialNr",IHr,2,TrHs))begin
					testf = true;
					if(IHr.ArtCode!=SBr.Item)then begin TrHs = false; testf = false; end;
					if(IHr.SerialNr!=SBr.Serial)then begin TrHs = false; testf = false; end;
					if(IHr.Location!=SBr.Location)then begin testf = false; end;
					if(IHr.StockAffectf==0)then begin testf = false; end;
					
					if(testf)then begin
						qty = qty + IHr.Qty;
					end;
				end;
				resetloop(IHr);
				if(qty!=SBr.Quant)then begin
					logtext(0,"Error serbal " & SBr.Item & "  " & SBr.Location & " " & SBr.Serial & "  " & qty & " " & SBr.Quant);
					if(qty==0)then begin
						SBr.Quant = 0;
						//recordstore(SBr,true);
					end;
					if(qty==1 and SBr.Quant>1)then begin
						SBr.Quant = 1;
						recordstore(SBr,true);
					end;
				end;
			end;
		end;
		comp = 0;
	end; 
	

return;
end;



global webpublic updating procedure WebUpdateORSalesGroup()
begin
  record ORVc ORr;
  
  setcompany(13,false);
  
  while(loopmain(ORr,1,true))begin
    
    if(ORr.SalesGroup=="NP")then begin
      if(ORr.OrderClass=="INTPC")then begin
        ORr.SalesGroup = "NOTNP";
        recordstore(ORr,true);
      end;
    end;
    
  end;
  
return;
end;


global webpublic updating procedure WebUpdateORiswebshop()
begin
  record ORVc ORr;
  row ORVc ORrw;
  boolean TrHs;
  integer i,rwcnt;
  
  setcompany(13,false);
  
  ORr.OKFlag = 0;
  TrHs = true;
  while(loopkey("OKFlag",ORr,1,TrHs))begin
    if(ORr.OKFlag==0)then begin
      if(ORr.CustOrdNr!=("M" & ORr.SerNr))then begin
        logtext(0,ORr.SerNr);
        rwcnt = matrowcnt(ORr);
        for(i=0;i<rwcnt;i=i+1)begin
          matrowget(ORr,i,ORrw);
          ORrw.iswebshop = 1;
          matrowput(ORr,i,ORrw);
        end;
        recordstore(ORr,true);
      end;
    end else begin
        TrHs = false;
    end;    
  end;
  
return;
end;



global webpublic procedure WebFicIFileIHr()
begin
  record ItemHistVc IHr;
  record INVc INr;
  
  setcompany(13,false);
  
  while(loopmain(IHr,1,true))begin
    if(IHr.StockAffectf==1)then begin
      if(blank(IHr.InFileName))then begin
        INr.Code = IHr.ArtCode;
        if(readfirstmain(INr,1,true))then begin
          if(INr.ItemType==kItemTypeStocked)then begin
            logtext(0,"blank InFileName " & IHr.ArtCode & " " & IHr.FileName);
          end;
        end;
      end;
    end;
  end;
  
return;
end;